version: '2.1'
services:

  data-broker:
    image: dredd-tests
    restart: always
    depends_on:
      - kafka
      - data-broker-redis

  zookeeper:
    image: "zookeeper:3.4"
    restart: always

  data-broker-redis:
    image: redis
    restart: always
    networks:
      default:
        aliases:
          - dbmredis

  kafka:
    image: "ches/kafka:0.10.1.1"
    depends_on:
      - zookeeper
    restart: always
    environment:
      ZOOKEEPER_IP: zookeeper
      KAFKA_NUM_PARTITIONS: 10

  auth-redis:
    image: redis:alpine
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  auth:
    image: dojot/auth:latest
    restart: always
    depends_on:
      - postgres
      - auth-redis
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AUTH_DB_HOST: "postgres"
      AUTH_DB_USER: "kong"
      AUTH_KONG_URL: "http://apigw:8001"
      AUTH_CACHE_HOST: "auth-redis"
      # This is used to select the type of cache to be used. Allowed values are "redis" or "nocache"
      AUTH_CACHE_NAME: "redis"
    logging:
      driver: json-file
      options:
        max-size: 100m

  postgres:
    image: "postgres:9.4-alpine"
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: 100m

  postgres-users:
    image: "postgres:9.4-alpine"
    restart: on-failure
    command: >
      bash -c "if ! psql -h postgres -U postgres -t -c '\du' | cut -d \| -f 1 | grep -qw kong; then
                   echo 'creating user kong'
                   createuser kong -d -h postgres -U postgres
               else
                   echo 'user kong exists'
               fi
               if ! psql -h postgres -U postgres -lqt | cut -d \| -f 1 | grep -qw kong; then
                   echo 'creating database kong'
                   createdb kong -U kong -h postgres
               else
                   echo 'database kong exists'
               fi"
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: 100m
